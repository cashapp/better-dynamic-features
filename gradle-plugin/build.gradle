import com.google.devtools.ksp.gradle.KspTaskJvm
import com.squareup.wire.gradle.WireTask
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
  id("app.cash.better-dynamic-features.convention")
  alias(libs.plugins.ksp)
  id("java-gradle-plugin")
  alias(libs.plugins.publish)
  alias(libs.plugins.spotless)
  alias(libs.plugins.wire)
}

gradlePlugin {
  plugins {
    betterDynamicFeatures {
      id = 'app.cash.better.dynamic.features'
      implementationClass = 'app.cash.better.dynamic.features.BetterDynamicFeaturesPlugin'
    }
  }
}

sourceSets {
  main.kotlin.srcDir "$buildDir/gen"
}

dependencies {
  ksp(libs.moshi.codegen)

  implementation(projects.codegen)
  implementation(projects.codegen.api)

  implementation gradleApi()
  implementation(libs.agp)
  implementation(libs.javassist)
  implementation(libs.kotlin.compiler)
  implementation(libs.kotlin.gradle)
  implementation(libs.kotlinPoet.core)
  implementation(libs.ksp.gradlePlugin)
  implementation(libs.moshi.core)
  implementation(libs.moshi.kotlin)
  implementation(files("libs/ARSCLib-1.1.5.jar"))

  testImplementation(libs.junit)
  testImplementation(libs.truth)
}

def pluginVersion = tasks.register("pluginVersion") {
  def outputDir = file("$buildDir/gen")
  def rootPropertiesFile = file("$rootProject.projectDir/gradle.properties")

  inputs.file rootPropertiesFile
  outputs.dir outputDir

  doLast {
    def rootProperties = new Properties()
    rootPropertiesFile.withInputStream {
      rootProperties.load(it)
    }

    def versionFile = file("$outputDir/app/cash/better/dynamic/features/Version.kt")
    versionFile.parentFile.mkdirs()
    versionFile.text = """// Generated file. Do not edit!
package app.cash.better.dynamic.features

val VERSION = "${rootProperties.getProperty("VERSION_NAME")}"
val KOTLIN_VERSION = "${libs.versions.kotlin.get()}"
"""
  }
}

tasks.withType(KotlinCompile).configureEach { dependsOn(pluginVersion) }
tasks.withType(KspTaskJvm).configureEach { dependsOn(pluginVersion) }

wire {
  kotlin {}
}

// https://github.com/square/wire/issues/2335
afterEvaluate {
  tasks.withType(KspTaskJvm).configureEach {
    dependsOn(tasks.withType(WireTask))
  }
}
